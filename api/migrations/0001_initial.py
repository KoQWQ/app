# Generated by Django 2.1.4 on 2019-01-01 23:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название конкурса')),
                ('type', models.CharField(choices=[('PAIR_CONTEST', 'Парный конкурс'), ('ASSOCIATION_COMPETITION', 'Конкурс-ассоциации')], default='PAIR_CONTEST', max_length=50)),
                ('date', models.DateTimeField(verbose_name='Дата проведения конкурса')),
            ],
            options={
                'verbose_name': 'Конкурс',
                'verbose_name_plural': 'Конкурсы',
            },
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('middlename', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('email', models.CharField(max_length=50, verbose_name='Почтовый адрес')),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Competition', verbose_name='Идентификатор конкурса')),
            ],
            options={
                'verbose_name': 'Судья',
                'verbose_name_plural': 'Судьи',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('gender', models.CharField(choices=[('MALE', 'Мужской'), ('FEMALE', 'Женский')], default='MALE', max_length=50)),
                ('payment', models.BooleanField(default=False, verbose_name='Оплата внесена')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('school_name', models.CharField(max_length=50, verbose_name='Имя школы')),
                ('number', models.PositiveIntegerField(blank=True, max_length=50, verbose_name='Место в конкурсе')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Количество набранных участником баллов')),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Competition', verbose_name='Идентификатор конкурса')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('type', models.CharField(choices=[('QUALIFYING', 'Отборочные'), ('SEMIFINAL', 'Полуфинал'), ('FINAL', 'Финал'), ('REDANCE', 'Перетанцовки')], default='QUALIFYING', max_length=50)),
                ('number_of_visits', models.PositiveIntegerField(verbose_name='Количество заходов')),
                ('number_passing_partisipant', models.PositiveIntegerField(blank=True, verbose_name='Количество проходящих участников')),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Competition', verbose_name='Идентификатор конкурса')),
                ('participants', models.ManyToManyField(blank=True, related_name='participants', to='api.Participant', verbose_name='Участники конкурса')),
            ],
            options={
                'verbose_name': 'Тур',
                'verbose_name_plural': 'Туры',
            },
        ),
    ]
